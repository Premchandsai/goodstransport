
services:
  postgres:
    image: postgres:latest
    container_name: p2p_transport-postgres
    environment:
      POSTGRES_DB: p2p_transport
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - app-network

  p2p_transport:
    build:
      context: .
      dockerfile: Dockerfile
    image: premchand1/p2p.transport:0.0.1
    container_name: p2ptransport
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/p2p_transport
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: "6379"
      STRIPE_APIKEY: sk_test_51R1M3g2Ns2l2ACyblnQhx8Xwi8bYTWnaHFNOdVuDzoXeb0RvNlIgp2wI1Rs348CBFyn56X8p4WSNAAi7xPKxPqo000QErvS7GN
      FIREBASE_CREDENTIALS_FILE: p2ptransport-95fe4-firebase-adminsdk-fbsvc-f7942f2d63.json
      JWT_SECRET: iimxlU5IZxO+N4VaQVoVpKzTnE63eqCRyhm9UKcZirk=
      KAFKA_TOPIC_NOTIFICATIONS: notifications-topic
      JWT_EXPIRATION: 86400
    ports:
      - "8081:8080"
    volumes:
      - ./p2p-transport-backend/src/main/resources/firebase-service.json:/app/firebase-service.json
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge